XALT 2.7+
    (2.7.1)  * Added contrib/TACC/build_default_2_account_str.in to build a json table that
               maps users to default charge string.
	     * xalt_syslog_to_db.in.py and xalt_file_to_db.in.py support --u2acct that allows sites
	       to specify a default charge account string when it is not specify in the job script.
	     * xalt_usage_report.in.py support --queue to only report from a particular queue.
	     * PKG intermediate results are now written to /dev/shm/XALT_... instead of /tmp/XALT_...
	       by default.
    (2.7.2)  * Support for env var XALT_FILE_PREFIX.
             * Make job_id filtering optional.
    (2.7.3)  * Use uuid hash value to chose the 000 to 996 directory when using XALT_FILE_PREFIX.
    (2.7.4)  * Sample all executables (MPI included) with MPI tasks counts < MPI_ALWAYS_RECORD
    (2.7.5)  * Update xalt_configuration_report about XALT_SAMPLING and MPI_ALWAYS_RECORD
    (2.7.6)  * Fix bugs introduced in version 2.7.5 about XALT_SAMPLING.
             * Better reporting of when myinit() and myfini() have completed their work.
             * Move uuid generation from libxalt_init.so to xalt_run_submission
    (2.7.7)  * Use dlopen/dlsym to dynamically link-in the uuid and crypto libraries.
               This allows XALT to be used with containers where libuuid.so and libcrypto.so
               might not be in the container.
    (2.7.8)  * Remember to use xalt-2.7.8 as tag not 2.7.8
    (2.7.9)  * Fix bug introduced when adding --version to xalt_configuration_report.C
    (2.7.10) * Stopping building libuuid. Instead copy libuuid.so from system to XALT's lib64 directory.
    (2.7.11) * Allow yes0 and run0 as values for XALT_TRACING to only track proc=0.
             * for TACC_config.py make 0 < t < 30 mins be 0.01% and 30mins < t < 120mins be 1%
    (2.7.12) * Remove trailing newline from the shared libraries captured from /proc/$PID/maps.
             * Ignore any trailing newlines and spaces in shared libraries when ingesting into DB.
    (2.7.13) * Issue #19: To avoid a name collision between ambertools having their own function
               named connect and libc's connect, XALT moved the call to xalt_syshost() from
	       xalt_initialize.c to the xalt_run_submission executable.
    (2.7.14) * Fix bug that was created with 2.7.11. Now XALT_TRACING=yes works with all mpi tasks and
               XALT_TRACING=yes0 just traces from mpi task 0.
    (2.7.15) * Switch XALTdb.py and Rmap_XALT.py to use xalt_rmapT.json instead of jsonReverseMapT.json
             * Update documentation to explain reverseMap file and function tracking
	     * ld.in only does function tracking if reverseMap file exists.
             * use xalt_rmap_exists command to determine if reverseMap file exists.
    (2.7.16) * To protect sites that use jsonReverseMapT.json for directory to module name mapping, I have
               modified Rmap_XALT.py to look first for xalt_rmapT.json.  If not found then search for
	       jsonReverseMapT.json and convert it to xalt_rmapT style.
    (2.7.17) * Issue #20: Added a configure/Env. Var to control whether the complete command line
               will be recorded.
    (2.7.18) * Issue #21: README.md doc patch.
    (2.7.19) * Fix bug with reporting GPU tracking when HAVE_DCGM=no and HAVE_NVML=yes in
               xalt_configuration_report
    (2.7.20) * Issue #22: Allow for the curl transmission style. Copy system libcurl into XALT
               lib64 install directory and Rpath that directory into xalt_run_submission etc.
             * Issue #23: Running XALT's "ld" alone now produces an error: No input files just
               like the real ld.
    (2.7.21) * Allow XALT to have separate sampling intervals for scalar or mpi programs.
    (2.7.22) * Correctly handle the case where a static parent program is XALT tracking and 
               this parent program fork-exec's a non-static child program also under XALT
	       tracking.
    (2.7.23) * Set the pid_str variable as late as possible.
    (2.7.24) * Add nodename to pid_str. Free pid_str after use.
    (2.7.25) * Zero memory locations before freeing data. Try not to put non-zero memory that
               user code will find with malloc().
	     * issue #24: check that /sys/module/nvidia exists before trying to track the GPU's
	     * try to dlopen("libnvidia-ml.so.1") if libnvidia-ml.so cannot be found.
    (2.7.26) * Have myfini() force xalt_run_submission to return the uuid to make sure that
               xalt_run_submission finishes before the myfini() routine completes.
    (2.7.27) * Support new table xalt_field_of_science which connects account string to
               NSF's field_of_science and NSF Directorate
    (2.7.28) * Adding SIG_USR2 to list of captured signals
             * Correctly always return the UUID from myfini() in xalt_initialize.c
