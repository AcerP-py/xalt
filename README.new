XALT 2.8+
    (2.8.1)   * progressBar.py: handle the case where pbar.update(i) where i could be greater than the max value
              * xalt_file_to_db.in.py: Cleaned-up all file not found exceptions
    (2.8.2)   * xalt_configuration_report.C: Added Non-MPI (scalar) to sample array title.
	      * py_src/createDB.in.py: add parseVersion() and initialize DB depending MySQL version and
	        use packaging.version if installed instead of home grown solution.
              * Make FULLDATESZ be twice the size of DATESZ to avoid gcc warning.
	      * Issue #28: Copy system libraries in to install (lib64) directory to support
	        executable like xalt_run_submission
    (2.8.3)   * Issue #28: deal with issues on Centos w.r.t. copying files to install lib64 directory.
    (2.8.4)   * Issue #28: Correctly set XALT_LD_LIBRARY_PATH for both SITE_CONTROLLED_PREFIX equal yes and no.
              * Issue #29: When xalt_initialize.c and xalt_run_submission.C and ld.in call or capture the
                output of a command, set XALT_EXECUTABLE_TRACKING=no every time.
    (2.8.5)   * Issue #29: Automatically add XALT_DEFAULT_DIR to the list of paths to ignore
                by modifying proj_mgmt/py_build_tools/build_parser_routine.py
              * Use src/tmpl/xalt_config.py to hold the default patterns.
              * Report XALT_CONFIG_PY and src/tmpl/xalt_config.py with xalt_configuration_report.x
                Add comment to say that the patterns come from both files.
    (2.8.6)   * Fix truncation bug w.r.t. pkg_path.
    (2.8.7)   * Include python 2 and python 3 package tracking support.
    (2.8.8)   * Setting $XALT_MPI_ALWAYS_RECORD overrides setting in site config.py file
              * Setting env var RDMAV_FORK_SAFE=1 around the capture() call in myfini().
	        This avoid problem with UCX version 1.6.1
    (2.8.10)  * Issue #30: Fix bug with python site package install
    (2.8.11)  * Last version that has a separate xalt_run_submission executable.

XALT 2.9+
    (2.9.5)   * Merge of runSubmission branch on to master branch
    (2.9.6)   * objdump extraction of watermark only happens for mpi programs run with num_tasks > 1
                Only vendor note extraction of watermark when num_tasks == 1.
    (2.9.7)   * Added container column to end of xalt_run table.
    (2.9.8)   * Added XALT_DUMP_ENV=yes to dump env vars in myinit()
    (2.9.9)   * Issue #31 Support readline_recursive() for copying system libraries to XALT
              * Fix bug where XALT_TRACING=run0 would cause run_submission to fail.
	      * Do not copy libdl.* from current system to $(LIB64)
	      * Move curl transport from transmit.c to a separate program (xalt_curl_transport)
    (2.9.10)  * Issue #37: Reuse the sha1 value if it is already been computed rather than recomputing.
              * Change XALT_TRACING=run to work like =yes when executable passes path test.
    (2.9.11)  * Change XALT_TRACING=run to work like =yes when executable passes path test and it has RANK==0.
              * Transmit json string directly (no compress/base64 encoding)
	      * Added V:3 version of transmission for syslog/logger style.
	      * Remove RPATH linking of libxalt_init.so to $(LIB64), remove -lz.
    (2.9.12)  * Change test to ((ret = waitpid()) == -1) in curl transmission.

XALT 2.10+
    (2.10)    * Fix bug where watermark not recorded even it existed.
    (2.10.1)  * Look for libcrypto.so and libuuid.so in $(LIB64) directory before doing a regular dlopen().
    (2.10.2)  * Disabling signal tracking by default.
              * Fixed bug where --with-trackGPU=dcgm failed.
	      * Made dcgm use load_dcgm() to dynamically link to dcgm routines just like nvml routines
	      * Removed -ldcgm from build.  Copy libdcgm.so* or libnvml.so* to $(LIB64)
	      * xalt_configuration_report now combines gpu tracking and gpu_style (e.g. yes(dcgm))
	      * Added gpu setup timer report to run_submission()
	      * Updated docs to explain how to find nvml.h from the cuda pkg.
    (2.10.3)  * Longhorn now uses --with-xaltFilePrefix=/scratch/projects/XALT
	      * Generate CRC using crcFast() routine in both Python and C.  Compare values
	        from generated and received Json strings.
	      * Add crc to uuid string key when combining syslog records.
    (2.10.4)  * Add duplicate uuid test in syslog with different crc values.
	      * If getline() fails to read anything in build_proc() then just return with no process tree.
              * Do not segfault when using syslog or logger transmission style if there are PKG record.
	      * Make sure the traceback is imported everywhere needed.
    (2.10.5)  * Issue #45: Add -D flag to xalt_file_to_db.py and xalt_syslog_to_db.py to track failures
    (2.10.6)  * Issue #45: -D flag now prints status to track progress to entering record into db.
    (2.10.7)  * Issue #45: And CRC with 0xFFFF in python test
    (2.10.8)  * Issue #45: And final answer in crcFast.c routine with 0xFFFF
    (2.10.9)  * Issue #46: Fix bug where copy_system_library_to_xalt.py failed to copy a library
                like libuuid.so when the link is across directories rather than in the same dir.
    (2.10.10) * Issue #46: copy_system_library_to_xalt.py: Handle the case where link is across directories 
                and is relative.
    (2.10.11) * Issue #48: Correctly handle crc: and crcStr: in syslog records.
    (2.10.12) * Issue #49: add -lgcc to $SYSLIB in ld linker wrapper when doing a static link.
    (2.10.13) * Return the number of duplicate run_uuids found.
              * Issue #50: Remove libm from the list of libraries copied to the $(LIB64) directory.
    (2.10.14) * Use defined labels constants in transmit.c so that logger and syslog have the
                same labels TRANSMISSION_STYLE.
    (2.10.15) * Issue #46: Count number of *.json files then tranmission=file
    (2.10.16) * Issue #46: Switch back to counting users then tranmission=file.
    (2.10.17) * Issue #48: Handle the case where there are trailing blanks written to syslog
              * Issue #48: Ingesting *.json data geneated by xalt-2.10.10
    (2.10.18) * Issue #46: Do not error out when a duplicate record is trying to be ingested
              * Issue #48: Do not check crc when doing r.completed()
    (2.10.19) * Issue #46: When debug, print each user name when ingest *.json files
              * Issue #46: remove libcrc calls in xalt_file_to_db.in.py
	      * Issue #53: obfuscate more function names like capture() etc
              * Issue #54: Make sure that -static builds include -lgcc.
    (2.10.20) * Issue #46: Add more debugging print stmts for xalt_file_to_db.in.py
              * Set make -j4 in common_funcs.sh
	      * Report what file transmission style: USE_HOME or XALT_FILE_PREFIX
    (2.10.21) * add syshost to banner for xalt_file_to_db.in.py and xalt_syslog_to_db.in.py
              * Check that the argument to --reverseMapD is a directory.
	      * Make sure that the Rmap constructor defines oldT var before use.
              * Check that rmapFn is a file and not a directory.
	      * Implement record aging in leftover.log
    (2.10.22) * Issue #55: read in each line from syslog file in binary mode
                and decode manually.
    (2.10.23) * Issue #55: Fix bug where jsonReverseMapT.json was ignored when ingesting *.json records
              * Report missing XALT_ETC_DIR/reverseMapD/xalt_rmapT.json in xalt_configuration_report.
              * Now require python module colorama. (must do a pip install for python2)
	      * Report warning if --reverseMapD option is used but no reverseMap files found.
    (2.10.24) * Switch from using colorama to using ansi.py from colorama package.
    (2.10.25) * Support for pre-ingestion filtering for XALTdb.py
              * Use asprintf directly instead of using __asprintf_chk etc by setting
	        -D_FORTIFY_SOURCE=0 when building.  This allows XALT to work with alpine
		based containers
	      * Replace DEBUG0, ... ,DEBUG4 with DEBUG() macro that supports variable number of
	        arguments.  (used trick from the book "Modern C" to handle the case of zero arguments)
	      * Added XALT_MPI_ALWAYS_RECORD, XALT_MPI_TRACKING, XALT_SCALAR_TRACKING and XALT_SAMPLING
	        values to XALT_qaT table in *.json records.
	      * Report number of json records that have been skipped by pre-ingestion filtering.
	      * Added pre-ingest filtering documentation.
    (2.10.26) * The same as 2.10.25, just resolving correctly setting the tags.
    (2.10.27) * When extracting linker program, look for {"rustc", "nim" or "chpl"} if any of them 
                are parent processes.
	      * Compute parent processes as part json string. It is now written to COMP_T
	        (xalt_extract_linker.C).
	      * Now print Build_compiler and executable's xalt_version when xalt_tracing is on.
	      * Change xalt_extract_record to find the .note.xalt.info section of the executable instead of
	        .xalt (now: "objdump -s -j .note.xalt.info" instead of "objdump -s -j .xalt")
	      * Multiply the preIngest probabilty with sampling probability as the stored probability in
                xalt run record.
    (2.10.28) * The programs xalt_*_to_db.in.py now include the string "Ingestion stats: <syshost>:" for better
                greping the output for how the ingestion process went.
              * The ingestion stats include the number of megabytes ingested
    (2.10.29) * Fix typo in xalt_syslog_to_db.in.py.
W.I.P:
    (2.10.30) * Add head_path_patterns in src/tmpl/xalt_config.py to force XALT binaries
                to be marked as "SKIP" no matter what a site does.
	      * Put the string XALT_INSTALL_DIR into src/tmpl/xalt_config.py and have the build
	        python scripts replace that string with the actual install directory.
