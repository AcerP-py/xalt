XALT 2.0+
   (2.0.1-devel) Now TACC systems will track /bin/cp, /usr/bin/perl, etc with sampling
   (2.0.2-devel) Support for SPSR sampling added
   (2.0.3-devel) Now using XALT_SPSR_SAMPLING_RATE env var to override config'ed SPSR
                 sampling rate
   (2.0.4-devel) close stderr file and only dup(stderr) when XALT_TRACING is "yes" or "run"
   (2.0.5-devel) Change xalt_usage_report to use node hours instead of core hours,
                 ld.in now does not try to add xalt_initialize.so etc when building *.so
   (2.0.6-devel) Support x86_64-gnu-linux-ld as yet another linker.
   (2.0.7-devel) Now check status of fopen when opening files in /proc/*
   (2.0.8-devel) Fix issue #25: Fix bug with my_hostname_processor and 32bit
                 Force users to install XALT correctly.
   (2.0.9-devel) Check that XALT_DIR/libexec/xalt_run_submission exists before running it.
                 Report XALT_DIR and BAD_INSTALL with xalt_configuration_report
XALT 2.1+
   (2.1)   Moved devel branch to master branch. xalt_usage_report.py now report usage in
           core-hours and not node-hours.  Direct2db option support removed. Added cwd
	   field to xalt_link in db.
   (2.1.1) Truncate non-numeric characters for PBS job_id.
   (2.1.2) Fix of issue #29: updated contrib scripts,
           Fix of issue #30: protecting from divide by zero errors.
   (2.1.3) XALT registers a signal handler so that programs that seg-faults, fpe
           and other signals will generate an end record.
           XALT nolonger frees any malloc'ed memory in myfini().

                 
GPU Branch
   (2.1.2-gpu) Support for using the DCGM library to record gpu info.
               Correct support for defining the USE_DCGM macro.
	       Updated DCGM messages.
	       Wrap dcgmStartEmbedded() call to send stderr to /dev/null temporarily.
	       Allow xalt_run_submission to write to stderr when it is called from my_fini().
	       Add null termination for generated decoded c string in base64_decode().
	       
XALT 2.3+
   (2.3.1)  Turn off DCGM library in 32 bit mode.
   (2.3.2)  Fix bug in base64_decode string was off by one.
   (2.3.3)  Support XALT_TRANSMISSION_STYLE=file_separate_dirs
   (2.3.4)  Testing for 32 bit uuid library when BIT_32=yes   
            Fix problem with tracking GPU and not running
            nv-hostengine as root.
   (2.3.5)  Test for 32 bit uuid library before testing dcgm.
   (2.3.6)  Remove old x86_64-linux-gnu and i386-linux-gnu links
            before creating them.
   (2.3.7)  Fixed bugs in py_build_src/build_syshost_routine.py
            w.r.t. strip_nodename_numbers()	    
   (2.3.8)  Added note about needing to turn on accounting on GPU
            issue #38: use mktemp instead of mkdir
   (2.3.9)  issue #39: convert smart quotes in to regular quotes.
   (2.3.10) Look for OMPI vars before PMI vars.
   (2.3.11) Improved documentation for the config.py file
            Point sys-admins to the config.py when hostname and
	    executable path reject.
   (2.3.12) Removing some extra debugging code that leaked from
            trey_dbg branch 

XALT 2.4+
   (2.4.2) Added a static version of libuuid.a to built as part of XALT.
                     
XALT 2.5+
   Because of @git@ bug in Makefile.in that only shows up in the dist target.  The fix required
   that XALT move directly to 2.6
   
XALT 2.6+
    (2.6.1)  * Fix quote bug in configure.ac/configure.
    (2.6.2)  * Fix bug in configure.ac/configure/aclocal.m4 that tests for a valid MySQLdb python module.
    (2.6.3)  * Fix bug when requiring python scripts like xalt_syslog_to_db.py to be required to run python3.
             * Fix bug with the storing of cwd in xalt_link.
    (2.6.4)  * Fix bug with SYSHOST and errors in xalt_build_descriptA table.
    (2.6.5)  * Fix bug in xalt_transmission_factory.py
    (2.6.6)  * Fix bug in ld.in where the path was restricted for commands like as and ld that must have
               the user's Path.
    (2.6.7)  * Now support reading /proc/$PID/maps instead of parsing the output of ldd
    (2.6.8)  * Now supporting using the vendor note to hold the XALT watermark.
    (2.6.9)  * issue #4: Add default signal handler when re-raising the signal after my_fini() is fixed
    (2.6.10) * issue #4: Remove SIGINT from the list of signals that XALT tries to capture.
    (2.6.11) * Add XALT_RANDOM_NUMBER to the environment of the programs running under XALT.
    (2.6.12) * issue #6: added xalt.spec
             * issue #7: xalt_file_to_db.py must filter on syshost
             * using the update_version program xalt.spec and docs/source/conf.py are updated with the new version.
    (2.6.13) * issue #9: Handle spaces and double quotes in executable filenames.
    (2.6.14) * Make sure that all capture calls and system calls in xalt_initialize.c are protected against
               spaces in paths.  Changed end2end test to include a directory in $PATH that has a space in it.
             * Adding CWD to watermark.
	     * Make explicit in xalt_configuration_report and in the docs that $HOME and $USER must be defined.
    (2.6.15) * Added a debug message that reports that the "directdb" method is NOT supported.


XALT 2.7+
    (2.7.1)  * Added contrib/TACC/build_default_2_account_str.in to build a json table that
               maps users to default charge string.
	     * xalt_syslog_to_db.in.py and xalt_file_to_db.in.py support --u2acct that allows sites
	       to specify a default charge account string when it is not specify in the job script.
	     * xalt_usage_report.in.py support --queue to only report from a particular queue.
	     * PKG intermediate results are now written to /dev/shm/XALT_... instead of /tmp/XALT_...
	       by default.
    (2.7.2)  * Support for env var XALT_FILE_PREFIX.
             * Make job_id filtering optional.
    (2.7.3)  * Use uuid hash value to chose the 000 to 996 directory when using XALT_FILE_PREFIX.
    (2.7.4)  * Sample all executables (MPI included) with MPI tasks counts < MPI_ALWAYS_RECORD
    (2.7.5)  * Update xalt_configuration_report about XALT_SAMPLING and MPI_ALWAYS_RECORD
    (2.7.6)  * Fix bugs introduced in version 2.7.5 about XALT_SAMPLING.
             * Better reporting of when myinit() and myfini() have completed their work.
             * Move uuid generation from libxalt_init.so to xalt_run_submission
    (2.7.7)  * Use dlopen/dlsym to dynamically link-in the uuid and crypto libraries.
               This allows XALT to be used with containers where libuuid.so and libcrypto.so
               might not be in the container.
    (2.7.8)  * Remember to use xalt-2.7.8 as tag not 2.7.8
    (2.7.9)  * Fix bug introduced when adding --version to xalt_configuration_report.C
    (2.7.10) * Stopping building libuuid. Instead copy libuuid.so from system to XALT's lib64 directory.
    (2.7.11) * Allow yes0 and run0 as values for XALT_TRACING to only track proc=0.
             * for TACC_config.py make 0 < t < 30 mins be 0.01% and 30mins < t < 120mins be 1%
    (2.7.12) * Remove trailing newline from the shared libraries captured from /proc/$PID/maps.
             * Ignore any trailing newlines and spaces in shared libraries when ingesting into DB.
    (2.7.13) * Issue #19: To avoid a name collision between ambertools having their own function
               named connect and libc's connect, XALT moved the call to xalt_syshost() from
	       xalt_initialize.c to the xalt_run_submission executable.
    (2.7.14) * Fix bug that was created with 2.7.11. Now XALT_TRACING=yes works with all mpi tasks and
               XALT_TRACING=yes0 just traces from mpi task 0.
    (2.7.15) * Switch XALTdb.py and Rmap_XALT.py to use xalt_rmapT.json instead of jsonReverseMapT.json
             * Update documentation to explain reverseMap file and function tracking
	     * ld.in only does function tracking if reverseMap file exists.
             * use xalt_rmap_exists command to determine if reverseMap file exists.
    (2.7.16) * To protect sites that use jsonReverseMapT.json for directory to module name mapping, I have
               modified Rmap_XALT.py to look first for xalt_rmapT.json.  If not found then search for
	       jsonReverseMapT.json and convert it to xalt_rmapT style.
    (2.7.17) * Issue #20: Added a configure/Env. Var to control whether the complete command line
               will be recorded.
    (2.7.18) * Issue #21: README.md doc patch.
    (2.7.19) * Fix bug with reporting GPU tracking when HAVE_DCGM=no and HAVE_NVML=yes in
               xalt_configuration_report
    (2.7.20) * Issue #22: Allow for the curl transmission style. Copy system libcurl into XALT
               lib64 install directory and Rpath that directory into xalt_run_submission etc.
             * Issue #23: Running XALT's "ld" alone now produces an error: No input files just
               like the real ld.
    (2.7.21) * Allow XALT to have separate sampling intervals for scalar or mpi programs.
    (2.7.22) * Correctly handle the case where a static parent program is XALT tracking and 
               this parent program fork-exec's a non-static child program also under XALT
	       tracking.
    (2.7.23) * Set the pid_str variable as late as possible.
    (2.7.24) * Add nodename to pid_str. Free pid_str after use.
    (2.7.25) * Zero memory locations before freeing data. Try not to put non-zero memory that
               user code will find with malloc().
	     * issue #24: check that /sys/module/nvidia exists before trying to track the GPU's
	     * try to dlopen("libnvidia-ml.so.1") if libnvidia-ml.so cannot be found.
    (2.7.26) * Have myfini() force xalt_run_submission to return the uuid to make sure that
               xalt_run_submission finishes before the myfini() routine completes.
    (2.7.27) * Support new table xalt_field_of_science which connects account string to
               NSF's field_of_science and NSF Directorate
    (2.7.28) * Adding SIG_USR2 to list of captured signals
             * Correctly always return the UUID from myfini() in xalt_initialize.c

             
XALT 2.8+
    (2.8.1)   * progressBar.py: handle the case where pbar.update(i) where i could be greater than the max value
              * xalt_file_to_db.in.py: Cleaned-up all file not found exceptions
    (2.8.2)   * xalt_configuration_report.C: Added Non-MPI (scalar) to sample array title.
	      * py_src/createDB.in.py: add parseVersion() and initialize DB depending MySQL version and
	        use packaging.version if installed instead of home grown solution.
              * Make FULLDATESZ be twice the size of DATESZ to avoid gcc warning.
	      * Issue #28: Copy system libraries in to install (lib64) directory to support
	        executable like xalt_run_submission
    (2.8.3)   * Issue #28: deal with issues on Centos w.r.t. copying files to install lib64 directory.
    (2.8.4)   * Issue #28: Correctly set XALT_LD_LIBRARY_PATH for both SITE_CONTROLLED_PREFIX equal yes and no.
              * Issue #29: When xalt_initialize.c and xalt_run_submission.C and ld.in call or capture the
                output of a command, set XALT_EXECUTABLE_TRACKING=no every time.
    (2.8.5)   * Issue #29: Automatically add XALT_DEFAULT_DIR to the list of paths to ignore
                by modifying proj_mgmt/py_build_tools/build_parser_routine.py
              * Use src/tmpl/xalt_config.py to hold the default patterns.
              * Report XALT_CONFIG_PY and src/tmpl/xalt_config.py with xalt_configuration_report.x
                Add comment to say that the patterns come from both files.
    (2.8.6)   * Fix truncation bug w.r.t. pkg_path.
    (2.8.7)   * Include python 2 and python 3 package tracking support.
    (2.8.8)   * Setting $XALT_MPI_ALWAYS_RECORD overrides setting in site config.py file
              * Setting env var RDMAV_FORK_SAFE=1 around the capture() call in myfini().
	        This avoid problem with UCX version 1.6.1
    (2.8.10)  * Issue #30: Fix bug with python site package install
    (2.8.11)  * Last version that has a separate xalt_run_submission executable.

XALT 2.9+
    (2.9.5)   * Merge of runSubmission branch on to master branch
    (2.9.6)   * objdump extraction of watermark only happens for mpi programs run with num_tasks > 1
                Only vendor note extraction of watermark when num_tasks == 1.
    (2.9.7)   * Added container column to end of xalt_run table.
    (2.9.8)   * Added XALT_DUMP_ENV=yes to dump env vars in myinit()
    (2.9.9)   * Issue #31 Support readline_recursive() for copying system libraries to XALT
              * Fix bug where XALT_TRACING=run0 would cause run_submission to fail.
	      * Do not copy libdl.* from current system to $(LIB64)
	      * Move curl transport from transmit.c to a separate program (xalt_curl_transport)
    (2.9.10)  * Issue #37: Reuse the sha1 value if it is already been computed rather than recomputing.
              * Change XALT_TRACING=run to work like =yes when executable passes path test.
    (2.9.11)  * Change XALT_TRACING=run to work like =yes when executable passes path test and it has RANK==0.
              * Transmit json string directly (no compress/base64 encoding)
	      * Added V:3 version of transmission for syslog/logger style.
	      * Remove RPATH linking of libxalt_init.so to $(LIB64), remove -lz.
    (2.9.12)  * Change test to ((ret = waitpid()) == -1) in curl transmission.

XALT 2.10+
    (2.10)    * Fix bug where watermark not recorded even it existed.
    (2.10.1)  * Look for libcrypto.so and libuuid.so in $(LIB64) directory before doing a regular dlopen().
    (2.10.2)  * Disabling signal tracking by default.
              * Fixed bug where --with-trackGPU=dcgm failed.
	      * Made dcgm use load_dcgm() to dynamically link to dcgm routines just like nvml routines
	      * Removed -ldcgm from build.  Copy libdcgm.so* or libnvml.so* to $(LIB64)
	      * xalt_configuration_report now combines gpu tracking and gpu_style (e.g. yes(dcgm))
	      * Added gpu setup timer report to run_submission()
	      * Updated docs to explain how to find nvml.h from the cuda pkg.
    (2.10.3)  * Longhorn now uses --with-xaltFilePrefix=/scratch/projects/XALT
	      * Generate CRC using crcFast() routine in both Python and C.  Compare values
	        from generated and received Json strings.
	      * Add crc to uuid string key when combining syslog records.
    (2.10.4)  * Add duplicate uuid test in syslog with different crc values.
	      * If getline() fails to read anything in build_proc() then just return with no process tree.
              * Do not segfault when using syslog or logger transmission style if there are PKG record.
	      * Make sure the traceback is imported everywhere needed.
    (2.10.5)  * Issue #45: Add -D flag to xalt_file_to_db.py and xalt_syslog_to_db.py to track failures
    (2.10.6)  * Issue #45: -D flag now prints status to track progress to entering record into db.
    (2.10.7)  * Issue #45: And CRC with 0xFFFF in python test
    (2.10.8)  * Issue #45: And final answer in crcFast.c routine with 0xFFFF
    (2.10.9)  * Issue #46: Fix bug where copy_system_library_to_xalt.py failed to copy a library
                like libuuid.so when the link is across directories rather than in the same dir.
    (2.10.10) * Issue #46: copy_system_library_to_xalt.py: Handle the case where link is across directories 
                and is relative.
    (2.10.11) * Issue #48: Correctly handle crc: and crcStr: in syslog records.
    (2.10.12) * Issue #49: add -lgcc to $SYSLIB in ld linker wrapper when doing a static link.
    (2.10.13) * Return the number of duplicate run_uuids found.
              * Issue #50: Remove libm from the list of libraries copied to the $(LIB64) directory.
    (2.10.14) * Use defined labels constants in transmit.c so that logger and syslog have the
                same labels TRANSMISSION_STYLE.
    (2.10.15) * Issue #46: Count number of *.json files then tranmission=file
    (2.10.16) * Issue #46: Switch back to counting users then tranmission=file.
    (2.10.17) * Issue #48: Handle the case where there are trailing blanks written to syslog
              * Issue #48: Ingesting *.json data geneated by xalt-2.10.10
    (2.10.18) * Issue #46: Do not error out when a duplicate record is trying to be ingested
              * Issue #48: Do not check crc when doing r.completed()
    (2.10.19) * Issue #46: When debug, print each user name when ingest *.json files
              * Issue #46: remove libcrc calls in xalt_file_to_db.in.py
	      * Issue #53: obfuscate more function names like capture() etc
              * Issue #54: Make sure that -static builds include -lgcc.
    (2.10.20) * Issue #46: Add more debugging print stmts for xalt_file_to_db.in.py
              * Set make -j4 in common_funcs.sh
	      * Report what file transmission style: USE_HOME or XALT_FILE_PREFIX
    (2.10.21) * add syshost to banner for xalt_file_to_db.in.py and xalt_syslog_to_db.in.py
              * Check that the argument to --reverseMapD is a directory.
	      * Make sure that the Rmap constructor defines oldT var before use.
              * Check that rmapFn is a file and not a directory.
	      * Implement record aging in leftover.log
    (2.10.22) * Issue #55: read in each line from syslog file in binary mode
                and decode manually.
    (2.10.23) * Issue #55: Fix bug where jsonReverseMapT.json was ignored when ingesting *.json records
              * Report missing XALT_ETC_DIR/reverseMapD/xalt_rmapT.json in xalt_configuration_report.
              * Now require python module colorama. (must do a pip install for python2)
	      * Report warning if --reverseMapD option is used but no reverseMap files found.
    (2.10.24) * Switch from using colorama to using ansi.py from colorama package.
    (2.10.25) * Support for pre-ingestion filtering for XALTdb.py
              * Use asprintf directly instead of using __asprintf_chk etc by setting
	        -D_FORTIFY_SOURCE=0 when building.  This allows XALT to work with alpine
		based containers
	      * Replace DEBUG0, ... ,DEBUG4 with DEBUG() macro that supports variable number of
	        arguments.  (used trick from the book "Modern C" to handle the case of zero arguments)
	      * Added XALT_MPI_ALWAYS_RECORD, XALT_MPI_TRACKING, XALT_SCALAR_TRACKING and XALT_SAMPLING
	        values to XALT_qaT table in *.json records.
	      * Report number of json records that have been skipped by pre-ingestion filtering.
	      * Added pre-ingest filtering documentation.
    (2.10.26) * The same as 2.10.25, just resolving correctly setting the tags.
    (2.10.27) * When extracting linker program, look for {"rustc", "nim" or "chpl"} if any of them 
                are parent processes.
	      * Compute parent processes as part json string. It is now written to COMP_T
	        (xalt_extract_linker.C).
	      * Now print Build_compiler and executable's xalt_version when xalt_tracing is on.
	      * Change xalt_extract_record to find the .note.xalt.info section of the executable instead of
	        .xalt (now: "objdump -s -j .note.xalt.info" instead of "objdump -s -j .xalt")
	      * Multiply the preIngest probabilty with sampling probability as the stored probability in
                xalt run record.
    (2.10.28) * The programs xalt_*_to_db.in.py now include the string "Ingestion stats: <syshost>:" for better
                greping the output for how the ingestion process went.
              * The ingestion stats include the number of megabytes ingested
    (2.10.29) * Fix typo in xalt_syslog_to_db.in.py.
    (2.10.30) * Add head_path_patterns in src/tmpl/xalt_config.py to force XALT binaries
                to be marked as "SKIP" no matter what a site does.
	      * Put the string XALT_INSTALL_DIR into src/tmpl/xalt_config.py and have the build
	        python scripts replace that string with the actual install directory.
              * Now captures the ocaml and haskell compiler(ghc) when linking
	      * Now supports XALT_TRACING option link:<file>  (e.g. link:$HOME/t/linker.log)
	        to capture XALT_TRACING during linking.
              * Report mpi compiler with real compiler. For example:  mpicc(icc) instead of just icc.
              * Add the string LD_LIBRARY_PATH=$XALT_LD_LIBRARY_PATH before invoking
                xalt_rmap_exists in sh_src/ld.in
    (2.10.31) * Removed --with-cxxLDLibaryPath configuration options
    (2.10.32) * Converted TACC/contrib/*.in python files to use python2/3 startup
    (2.10.33) * Add support for XALT_COMM_WORLD_SIZE to override real number of mpi tasks
              * Fix bug with mpicc(mpiicc(icc)) to be mpicc(icc)
    (2.10.34) * Really fix bug with mpicc(mpiicc(icc)) to be mpiicc(icc)
    (2.10.35) * Use XMALLOC/xmalloc() macro and routine to catch malloc returning NULL.
    (2.10.36) * Add instructions for supporting clang compilers.
              * Allow ld.x to be anywhere in $PATH not just /usr/bin/ld.x
    (2.10.37) * Adding package filtering through xalt_record_pkg.c and xalt_pkg_filter.template
              * Change queue length to 64 and limit queue string in python to 64 chars.
              * Now support package filtering during ingestion as well (same filtering routine as
	        with xalt_record_pkg.c). This uses tmpl/xalt_pkg_filter.template.
	      * link xalt_record_pkg executable with xalt_pkg_filter.o instead of libpkgFilter.so
	        (solving rpm build problem)
    (2.10.38) * Allow sites to not require curl-devel.
    (2.10.39) * Change the way that GIT_VERSION is found when installing
              * Make --with-supportCURL=no remove the -lcurl requirement
              * Hide GNUmakefile in proj_mgmt/developer/top_level_makefile
                and require developer to make symlink to GNUmakefile
    (2.10.40) * Fix bug with generating GIT_VERSION when not inside a git repo
    (2.10.41) * Install permission default to umask value unless `id -u` is less than 500 where
                umask is set to 022. Sites can override permissions with --with-mode=750 etc.
              * Remove wait from ld.in. It is not needed anymore
              * Change names $ARGSRC and $ARGOBJ to be $WATERMARK_S and $WATERMARK_O to better
                describe the watermark process.
    (2.10.42) * Fix typo in ld.in about $WATERMARK_S and $WATERMARK_O.
              * Remove export LD_PRELOAD= from top of ld.in and put LD_PRELOAD= in front of
                all XALT programs run inside ld.in
              * If /etc/login.defs exists then use UID_MIN as the diff between system users
                and regular users
    (2.10.43) * Change UID_MIN default to 1000 since XALT only works on Linux based computers.
              * Check if either fullname or path is not a string when using xalt_sitepackage.py
    (2.10.44) * Add a try block around parsing Site's config.py file.  Report error in config.py
                if found.
    (2.10.45) * Fix typo in ld.in which prevented xalt_strip_linklib's from working.
    (2.10.46) * Fix bug so that my_hostname_parser config option works
              * Remove /tmp/tmp.* directories after configure is done with them.
	      * xalt_generate_watermark.c now uses C style comments instead of '#' at
	        the start of the line.  It also uses .string instead of .asciz to store
		strings
              * xalt_record_pkg.c: getopt() returns an int not char!!
              * Removed illegal instruction test as it is no portable from end2end test
	      * Fixed bug where test_record_pkg was not run in syslog test
	      * Now ignore arm programs like as and ld.bfd in syslog test
              * Support for command line filtering
              
