THIS_DIR := $(PARENT_DIR)/compiled
VPATH = .:$(THIS_DIR)
CXX := g++
CC  := gcc
MYSQL_CONFIG := @MYSQL_CONFIG@
ifneq ($(MYSQL_CONFIG),UNKNOWN)
  MYSQL_CFLAGS  := $(shell $(MYSQL_CONFIG) --cflags) -DHAVE_MYSQL
  MYSQL_LDFLAGS := $(shell $(MYSQL_CONFIG) --libs)  
endif

LIB_OPTIONS       := -fPIC -shared

OPTLVL      := -g -O2 -Wno-unused-result
CF_INIT     := -I$(THIS_DIR) -I. -fPIC 
CXXFLAGS    := $(OPTLVL) -std=c++11 -Ibuild_h $(MYSQL_CFLAGS) 
CFLAGS      := $(OPTLVL) -Ibuild_h -I$(DESTDIR)$(LIBEXEC)/libuuid_64/include 

C_SRC       := jsmn.c             	   \
	       xalt_fgets_alloc.c 	   \
               xalt_initialize.c  	   \
               xalt_quotestring.c 	   \
               xalt_realpath.c

CXX_SRC     := ConfigParser.C         	   \
               Json.C                 	   \
               Options.C              	   \
               Process.C              	   \
               ProgressBar.C          	   \
               SyslogRecord.C         	   \
               base64.C               	   \
               buildEnvT.C            	   \
               buildRmapT.C           	   \
               buildUserT.C           	   \
               capture.C              	   \
               epoch.C                	   \
               extractXALTRecord.C    	   \
               f2db.C                 	   \
               f2db_Options.C         	   \
               link_direct2db.C       	   \
               parseJsonStr.C         	   \
               parseLDD.C             	   \
               parseLDTrace.C         	   \
               parseSyslog.C          	   \
               run_direct2db.C        	   \
               s2db_Options.C         	   \
               translate.C            	   \
               transmit.C             	   \
	       xalt_configuration_report.C \
               xalt_epoch.C           	   \
               xalt_extract_linker.C  	   \
               xalt_generate_assembly.C    \
               xalt_generate_linkdata.C    \
               xalt_mysql_utils.C          \
               xalt_run_submission.C       \
               xalt_strip_linklib.C        \
               xalt_syslog_to_db.C         \
               xalt_utils.C                \
               zstring.C



XRS_EXEC     := $(DESTDIR)$(LIBEXEC)/xalt_run_submission
XRS_CXX_SRC  := xalt_run_submission.C ConfigParser.C Json.C Options.C Process.C base64.C              \
                buildEnvT.C buildRmapT.C buildUserT.C capture.C run_direct2db.C extractXALTRecord.C   \
                parseJsonStr.C parseLDD.C translate.C transmit.C xalt_mysql_utils.C xalt_utils.C      \
                zstring.C 
XRS_C_SRC    := xalt_quotestring.c xalt_fgets_alloc.c jsmn.c
XRS_OBJS     := $(patsubst %.C, %.o, $(XRS_CXX_SRC)) $(patsubst %.c, %.o, $(XRS_C_SRC))

XGA_EXEC     := $(DESTDIR)$(LIBEXEC)/xalt_generate_assembly
XGA_CXX_SRC  := xalt_generate_assembly.C parseJsonStr.C
XGA_C_SRC    := epoch.c jsmn.c xalt_quotestring.c
XGA_OBJS     := $(patsubst %.C, %.o, $(XGA_CXX_SRC)) $(patsubst %.c, %.o, $(XGA_C_SRC))

XGL_EXEC     := $(DESTDIR)$(LIBEXEC)/xalt_generate_linkdata
XGL_CXX_SRC  := xalt_generate_linkdata.C parseJsonStr.C parseJsonStr.C buildRmapT.C xalt_utils.C     \
                xalt_mysql_utils.C Json.C base64.C parseLDTrace.C capture.C link_direct2db.C         \
                zstring.C  ConfigParser.C transmit.C
XGL_C_SRC    := xalt_fgets_alloc.c  xalt_quotestring.c jsmn.c
XGL_OBJS     := $(patsubst %.C, %.o, $(XGL_CXX_SRC)) $(patsubst %.c, %.o, $(XGL_C_SRC))

XEL_EXEC     := $(DESTDIR)$(LIBEXEC)/xalt_extract_linker
XEL_CXX_SRC  := xalt_extract_linker.C Process.C Json.C
XEL_C_SRC    := xalt_quotestring.c xalt_fgets_alloc.c
XEL_OBJS     := $(patsubst %.C, %.o, $(XEL_CXX_SRC)) $(patsubst %.c, %.o, $(XEL_C_SRC))

XSL_EXEC     := $(DESTDIR)$(LIBEXEC)/xalt_strip_linklib
XSL_CXX_SRC  := xalt_strip_linklib.C parseJsonStr.C buildRmapT.C xalt_utils.C
XSL_C_SRC    := jsmn.c  xalt_fgets_alloc.c xalt_quotestring.c 
XSL_OBJS     := $(patsubst %.C, %.o, $(XSL_CXX_SRC)) $(patsubst %.c, %.o, $(XSL_C_SRC))

F2DB_EXEC    := $(DESTDIR)$(SBIN)/xalt_file_to_db
F2DB_CXX_SRC := f2db.C f2db_Options.C buildRmapT.C parseJsonStr.C Json.C epoch.C xalt_utils.C \
                link_direct2db.C run_direct2db.C ProgressBar.C translate.C xalt_mysql_utils.C \
                ConfigParser.C base64.C
F2DB_C_SRC   := xalt_quotestring.c jsmn.c xalt_fgets_alloc.c
F2DB_OBJS    := $(patsubst %.C, %.o, $(F2DB_CXX_SRC)) $(patsubst %.c, %.o, $(F2DB_C_SRC))

S2DB_EXEC    := $(DESTDIR)$(SBIN)/xalt_syslog_to_db
S2DB_CXX_SRC := xalt_syslog_to_db.C s2db_Options.C epoch.C ProgressBar.C SyslogRecord.C       \
                parseJsonStr.C translate.C xalt_mysql_utils.C ConfigParser.C base64.C         \
                zstring.C buildRmapT.C parseSyslog.C xalt_utils.C link_direct2db.C            \
                run_direct2db.C Json.C
S2DB_C_SRC   := xalt_fgets_alloc.c jsmn.c xalt_quotestring.c
S2DB_OBJS    := $(patsubst %.C, %.o, $(S2DB_CXX_SRC)) $(patsubst %.c, %.o, $(S2DB_C_SRC))

XCR_EXEC     := $(DESTDIR)$(BIN)/xalt_configuration_report
XCR_CXX_SRC  := xalt_configuration_report.C epoch.C
XCR_OBJS     := $(patsubst %.C, %.o, $(XCR_CXX_SRC))

%.d: %.c
	@set -e; rm -f $@;                                  \
        $(CC) -MM $(CFLAGS) $< > $@.$$$$;                   \
        sed 's,\($*\)\.o[ :]*,\1.o $@ : ,g' < $@.$$$$ > $@; \
        rm -f $@.$$$$

%.d: %.C
	@set -e; rm -f $@;                                  \
        $(CXX) -MM $(CXXFLAGS) $< > $@.$$$$;                \
        sed 's,\($*\)\.o[ :]*,\1.o $@ : ,g' < $@.$$$$ > $@; \
        rm -f $@.$$$$

all: ECHO $(XRS_EXEC) $(XGA_EXEC) $(XGL_EXEC) $(XEL_EXEC) $(XSL_EXEC) $(F2DB_EXEC) $(S2DB_EXEC) \
                build_init build_init_32bit_$(HAVE_32BIT)       \
	        $(DESTDIR)$(LIBEXEC)/xalt_syshost               \
                $(DESTDIR)$(LIBEXEC)/xalt_realpath          	\
	        $(DESTDIR)$(BIN)/xalt_configuration_report    	\
                $(DESTDIR)$(LIBEXEC)/xalt_epoch             	

ECHO:
	@echo XALT_EXECUTABLE_TRACKING: $(XALT_EXECUTABLE_TRACKING)

$(XRS_EXEC) : $(XRS_OBJS)
	$(LINK.C) $(OPTLVL) -o $@ $^ -lz $(MYSQL_LDFLAGS)

$(XGA_EXEC): $(XGA_OBJS)
	g++ $(OPTLVL) -o $@ $^

$(XGL_EXEC): $(XGL_OBJS)
	g++ $(OPTLVL) -o $@ $^ $(MYSQL_LDFLAGS) -lz

$(XEL_EXEC) : $(XEL_OBJS)
	g++ $(OPTLVL) -o $@ $^

$(XSL_EXEC) : $(XSL_OBJS)
	g++ $(OPTLVL) -o $@ $^

$(XCR_EXEC) : $(XCR_OBJS)
	g++ $(OPTLVL) -o $@ $^

$(F2DB_EXEC) : $(F2DB_OBJS)
	g++ $(OPTLVL) -o $@ $^ -lz $(MYSQL_LDFLAGS)

$(S2DB_EXEC) : $(S2DB_OBJS)
	g++ $(OPTLVL) -o $@ $^ -lz $(MYSQL_LDFLAGS)

$(DESTDIR)$(LIBEXEC)/xalt_realpath: xalt_realpath.o
	g++ $(OPTLVL) -o $@ $^

$(DESTDIR)$(LIBEXEC)/xalt_epoch: xalt_epoch.o epoch.o
	g++ $(OPTLVL) -o $@ $^

$(DESTDIR)$(LIBEXEC)/xalt_syshost: xalt_syshost_main.o xalt_fgets_alloc.o
	gcc -I$(THIS_DIR) $(OPTLVL) -o $@ $^

xalt_syshost_main.o: $(CURDIR)/xalt_syshost.c xalt_fgets_alloc.h
	gcc -I$(THIS_DIR) -c -DHAVE_MAIN $(OPTLVL) -o $@ $<


build_init: $(DESTDIR)$(LIBEXEC)/lib64/xalt_quotestring.o     $(DESTDIR)$(LIBEXEC)/lib64/xalt_syshost.o            \
            $(DESTDIR)$(LIBEXEC)/lib64/xalt_fgets_alloc.o     $(DESTDIR)$(LIBEXEC)/lib64/xalt_initialize_preload.o \
            $(DESTDIR)$(LIBEXEC)/lib64/libxalt_init.so        $(DESTDIR)$(LIBEXEC)/lib64/xalt_initialize_dbg.o     \
            $(DESTDIR)$(LIBEXEC)/lib64/xalt_initialize.o      $(DESTDIR)$(LIBEXEC)/lib64/libxalt_init_dbg.so

build_init_32bit_no:

build_init_32bit_yes: $(DESTDIR)$(LIBEXEC)/lib/xalt_quotestring_32.o $(DESTDIR)$(LIBEXEC)/lib/xalt_syshost_32.o      \
                      $(DESTDIR)$(LIBEXEC)/lib/xalt_fgets_alloc_32.o $(DESTDIR)$(LIBEXEC)/lib/xalt_initialize_32.o   \
                      $(DESTDIR)$(LIBEXEC)/lib/libxalt_init.so

$(DESTDIR)$(LIBEXEC)/lib64/xalt_quotestring.o: xalt_quotestring.c xalt_quotestring.h
	gcc $(CFLAGS) $(CF_INIT) -o $@ -c $<
$(DESTDIR)$(LIBEXEC)/lib64/xalt_syshost.o: $(CURDIR)/xalt_syshost.c
	gcc $(CFLAGS) $(CF_INIT) -o $@ -c $< 
$(DESTDIR)$(LIBEXEC)/lib64/xalt_fgets_alloc.o: xalt_fgets_alloc.c xalt_fgets_alloc.h
	gcc $(CFLAGS) $(CF_INIT) -o $@ -c $<
$(DESTDIR)$(LIBEXEC)/lib64/xalt_initialize.o: xalt_initialize.c xalt_quotestring.h build_h/xalt_config.h 
	gcc $(CFLAGS) $(CF_INIT) -DSTATE=REGULAR -o $@ -c $<


$(DESTDIR)$(LIBEXEC)/lib/xalt_quotestring_32.o: xalt_quotestring.c xalt_quotestring.h
	gcc -m32 $(CFLAGS) $(CF_INIT) -o $@ -c $<
$(DESTDIR)$(LIBEXEC)/lib/xalt_syshost_32.o: $(CURDIR)/xalt_syshost.c
	gcc -m32 $(CFLAGS) $(CF_INIT) -o $@ -c $< 
$(DESTDIR)$(LIBEXEC)/lib/xalt_fgets_alloc_32.o: xalt_fgets_alloc.c xalt_fgets_alloc.h
	gcc -m32 $(CFLAGS) $(CF_INIT) -o $@ -c $<
$(DESTDIR)$(LIBEXEC)/lib/xalt_initialize_32.o: xalt_initialize.c xalt_quotestring.h build_h/xalt_config.h 
	gcc -m32 $(CFLAGS) $(CF_INIT) -DSTATE=REGULAR -Ibuild_h  -o $@ -c $<
$(DESTDIR)$(LIBEXEC)/lib/xalt_initialize_preload_32.o: xalt_initialize.c xalt_quotestring.h build_h/xalt_config.h 
	gcc -m32 $(CFLAGS) $(CF_INIT) -DSTATE=LD_PRELOAD -Ibuild_h  -o $@ -c $<
$(DESTDIR)$(LIBEXEC)/lib/libxalt_init.so: $(DESTDIR)$(LIBEXEC)/lib/xalt_initialize_preload_32.o \
                                          $(DESTDIR)$(LIBEXEC)/lib/xalt_syshost_32.o            \
                                          $(DESTDIR)$(LIBEXEC)/lib/xalt_quotestring_32.o        \
                                          $(DESTDIR)$(LIBEXEC)/lib/xalt_fgets_alloc_32.o
	gcc -m32 $(CFLAGS) $(CF_INIT) $(LIB_OPTIONS) -o $@  $^ -L$(DESTDIR)$(LIBEXEC)/lib -luuid

$(DESTDIR)$(LIBEXEC)/lib64/xalt_initialize_preload.o: xalt_initialize.c xalt_quotestring.h build_h/xalt_config.h 
	gcc $(CFLAGS) $(CF_INIT) -DSTATE=LD_PRELOAD -o $@ -c $<

$(DESTDIR)$(LIBEXEC)/lib64/libxalt_init.so: $(DESTDIR)$(LIBEXEC)/lib64/xalt_initialize_preload.o \
                                            $(DESTDIR)$(LIBEXEC)/lib64/xalt_syshost.o            \
                                            $(DESTDIR)$(LIBEXEC)/lib64/xalt_quotestring.o        \
                                            $(DESTDIR)$(LIBEXEC)/lib64/xalt_fgets_alloc.o
	gcc $(CFLAGS) $(CF_INIT) $(LIB_OPTIONS) -o $@  $^ -L$(DESTDIR)$(LIBEXEC)/lib64 -luuid 

$(DESTDIR)$(LIBEXEC)/lib64/xalt_initialize_dbg.o: xalt_initialize.c xalt_quotestring.h build_h/xalt_config.h 
	gcc $(CFLAGS) $(CF_INIT) -Ibuild_h -g -O0 -DSTATE=LD_PRELOAD -o $@ -c $<

$(DESTDIR)$(LIBEXEC)/lib64/libxalt_init_dbg.so: $(DESTDIR)$(LIBEXEC)/lib64/xalt_initialize_dbg.o \
                                                $(DESTDIR)$(LIBEXEC)/lib64/xalt_syshost.o        \
                                                $(DESTDIR)$(LIBEXEC)/lib64/xalt_quotestring.o    \
                                                $(DESTDIR)$(LIBEXEC)/lib64/xalt_fgets_alloc.o
	gcc $(CFLAGS) $(CF_INIT) -g -O0 $(LIB_OPTIONS) -o $@ $^ -L$(DESTDIR)$(LIBEXEC)/lib64 -luuid


makefile: Makefile.in config.status
	./config.status $@


neat:
	$(RM) *~
clean: 
	$(RM) *.o 


include $(patsubst %.c, %.d, $(C_SRC)) $(patsubst %.C, %.d, $(CXX_SRC))
