#!/bin/bash
#-*- shell-script -*-

MY_PATH=$0
MY_NAME=$(basename $MY_PATH)
ARGV="$@"

XALT_DIR=@xalt_dir@
RUN_SUBMIT=$XALT_DIR/libexec/xalt_run_submission.py
UUIDGEN=@path_to_uuidgen@
SYSHOST=$($XALT_DIR/site/xalt_syshost.py)

MPI_STACK=$($WHICH_MPI --name)

FIND_EXEC=$XALT_DIR/site/xalt_find_exec_ibrun.py

EXEC=unknown
if [ -x "$FIND_EXEC" ]; then
  EXEC=$($FIND_EXEC "$@")
fi

########################################################################
# Search for the command  and make sure that you don't find this one.
# We use "type -p -a" instead of searching the path.  Since bash should
# have search and cached all the executable in the path.  This should be
# faster then walking the path.

for exe in $(type -p -a $MY_NAME); do
  if [ $exe != $MY_PATH ]; then
    MY_CMD=$exe
    break
  fi
done

RUN_UUID=`$UUIDGEN`
DATESTR=`date +%Y_%m_%d_%H_%M_%S`

runFn=$HOME/.xalt.d/run.${SYSHOST}.${DATESTR}.$RUN_UUID.json

sTime=$($RUN_SUBMIT --ntasks $NTASKS --start 0        --fn "$runFn" --run_uuid "$RUN_UUID" -- $EXEC)

$MY_CMD $ARGV

rTime=$($RUN_SUBMIT --ntasks $NTASKS --start "$sTime" --fn "$runFn" --run_uuid "$RUN_UUID" -- $EXEC)
