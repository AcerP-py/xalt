#!/bin/bash
#-*- shell-script -*-

MY_LD=$0

XALT_DIR=/opt/apps/xalt/xalt/
GEN_ASSEMBLY=$XALT_DIR/bin/xalt_generate_assembly.py
GEN_LINKDATA=$XALT_DIR/bin/xalt_generate_linkdata.py
SYS_HOST_CMD=$XALT_DIR/bin/xalt_syshost.py

SYSHOST=$($SYS_HOST_CMD)

AS=/usr/bin/as
UUIDGEN=/usr/bin/uuidgen

ARGV="$@"

########################################################################
# Search for `ld' and make sure that you don't find this one.
# We use "type -p -a" instead of searching the path.  Since bash should
# have search and cached all the executable in the path.  This should be
# faster then walking the path.

for exe in $(type -p -a ld); do
  if [ $exe != $MY_LD ]; then
    LD=$exe
    break
  fi
done


########################################################################
# Loop over command line arguments to ld. This code is used instead of
# getopt and others because this wrapper script should not try to know
# all the options to ld. Instead we are just "cherry-picking" the options
# we want to know about.

EXEC="a.out"
append=false
prev=
done=false
for option
do
  if [ -n "$prev" ]; then
    eval "$prev=\$option"
    prev=
    shift
    continue
  fi

  case "$option" in
    -*=*) optarg=`builtin echo "$option" | sed  's/[-_a-zA-Z0-9]*=//'` ;;
    -*) optarg=;;
    *) optarg=; done=true;;
  esac
  
  case $option in
    --version|-v|--help)
      $LD $ARGV
      exit
      ;;
    -o)
      prev='EXEC'
      ;;
  esac

  #####################################################################
  # This code below is commented out.  Since this script is not parsing
  # all options the done flag won't work.

  #if [ "$done" = "true" ]; then
  #  break;
  #fi

  shift
done

UUID=`$UUIDGEN`
DATESTR=`date +%Y_%m_%d_%H_%M_%S`
WRKDIR=/tmp/${USER}_${DATESTR}_${UUID}
LINKLINE=$WRKDIR/link.txt
ARGSRC=$WRKDIR/xalt.s
ARGOBJ=$WRKDIR/xalt.o
RESULT=$HOME/.xalt.d/link.${DATESTR}.$UUID.json

if [ ! -d $WRKDIR ]; then
  mkdir -p $WRKDIR
fi

PSTREE=$(pstree -l -s $$)

EPOCH=$($GEN_ASSEMBLY $UUID $SYSHOST $PSTREE $ARGSRC)

$AS $ARGSRC -o $ARGOBJ

$LD $ARGV $ARGOBJ -t > $LINKLINE

STATUS=$?

$GEN_LINKDATA $UUID $STATUS `pwd` $SYSHOST $PSTREE $EXEC $ARGOBJ $EPOCH $LINKLINE $RESULT

if [ "$?" = 0 -a -n "$XALT_LD_DEBUG" ]; then
   echo ""                       >> $RESULT
   echo "====================="  >> $RESULT
   echo  $LD $ARGV $ARGOBJ       >> $RESULT
   echo "====================="  >> $RESULT

   cat  $LINKLINE >> $RESULT
fi

rm -rf $WRKDIR

exit $STATUS
